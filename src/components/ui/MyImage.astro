---
import { Image } from "astro:assets"

import data from "~/data/site.json"

export interface Props {
  img?: ImageMetadata
  src?: string
  fromPublic?: boolean
  alt: string
  size?: string
  layout?: "cover" | "contain" | "fill"
  aspect?: string
  rounded?: string
  shadow?: string
  width?: number
  height?: number
  widths?: number[]
  sizes?: string
  loading?: "eager" | "lazy" | null | undefined
  withOverlay?: boolean
  customOverlay?: boolean
  overlayColor?: string
  class?: string
}

const {
  img,
  src,
  fromPublic = false,
  alt,
  size = "size-full",
  layout = "object-cover",
  aspect = "aspect-square",
  rounded = "rounded-lg",
  shadow = "shadow-md",
  width = 0,
  height = 0,
  widths = [320, 500, 800, 1080, 1600, 2000 /*img.width*/],
  sizes = `(max-width: 480px) 320px, (max-width: 768px) 500px, (max-width: 992px) 800px, (max-width: 1280px) 1080px, (max-width: 1600px) 1600px, 2000px`,
  loading = "lazy",
  withOverlay = false,
  customOverlay = false,
  overlayColor = "bg-gradient-to-t from-slate-950/30 to-slate-700/10",
  class: className,
  ...attributes
} = Astro.props

let imageMetadata: ImageMetadata | undefined
let imageSrc: string | ImageMetadata | Promise<{ default: ImageMetadata }>

// direct transfer
if (img) imageSrc = img
// given image path
else if (src) {
  let images
  let generalPath

  if (fromPublic) {
    generalPath = "/public/"
    images = import.meta.glob<{ default: ImageMetadata }>(
      "/public/*.{jpeg,jpg,png,gif,webp,avif}"
    )
  } else {
    generalPath = "/src/assets/images/"
    images = import.meta.glob<{ default: ImageMetadata }>(
      "/src/assets/images/*.{jpeg,jpg,png,gif,webp,avif}"
    )
  }

  const imageImport = images[`${generalPath}${src}`]?.()
  if (imageImport) {
    imageMetadata = (await imageImport).default
    imageSrc = imageMetadata
  } else imageSrc = data.site.placeholderImage
  // placeholder image
} else imageSrc = data.site.placeholderImage
---

{
  withOverlay ? (
    <div class:list={["relative size-full", rounded]}>
      <Image
        src={imageSrc as ImageMetadata}
        alt={alt}
        width={width ? width : !img && !imageMetadata ? 600 : undefined}
        height={height ? height : !img && !imageMetadata ? 600 : undefined}
        widths={width ? undefined : widths}
        sizes={width ? undefined : sizes}
        class:list={[size, layout, aspect, rounded, shadow, className]}
        loading={loading}
        {...attributes}
      />
      {!customOverlay ? (
        <div
          class:list={[
            "l-0 t-0 absolute inset-0 size-full items-end justify-center pb-2",
            rounded,
            overlayColor,
          ]}>
          <slot name="overlayItems" />
        </div>
      ) : (
        <slot name="overlay" />
      )}
    </div>
  ) : (
    <Image
      src={imageSrc as ImageMetadata}
      alt={alt}
      width={width ? width : !img && !imageMetadata ? 600 : undefined}
      height={height ? height : !img && !imageMetadata ? 600 : undefined}
      widths={width ? undefined : widths}
      sizes={width ? undefined : sizes}
      class:list={[size, layout, aspect, rounded, shadow, className]}
      loading={loading}
      {...attributes}
    />
  )
}
