---
import type { HTMLAttributes } from "astro/types"
import { tv } from "tailwind-variants"

import { buildSlug } from "@utils/utils"

export interface Props extends HTMLAttributes<"a"> {
  variant?: "primary" | "secondary" | "tetriary" | "link"
  size?: "sm" | "md" | "lg"
  link: string
  rawLink?: boolean
  class?: string
}

const {
  variant = "primary",
  size = "md",
  link,
  rawLink = false,
  class: className,
  ...attributes
} = Astro.props

const button = tv({
  base: "flex flex-row place-items-center justify-center gap-2 text-center transition-all duration-300 ease-in-out",
  variants: {
    variant: {
      primary:
        "rounded border border-accent bg-accent text-white shadow-md hover:translate-y-1 hover:border-accent-dark hover:bg-accent-dark",
      secondary:
        "rounded border border-black bg-transparent text-black shadow-md hover:translate-y-1 hover:bg-black hover:text-white",
      tetriary:
        "rounded border border-white bg-transparent text-white shadow-md hover:translate-y-1 hover:bg-white hover:text-black",
      link: "hover:text-accent",
    },
    size: {
      sm: "px-2 py-2 text-sm leading-none",
      md: "px-4 py-4 text-base",
      lg: "px-6 py-6 text-lg",
    },
  },
  compoundVariants: [
    {
      variant: "link",
      size: ["sm", "md", "lg"],
      class: "pl-0",
    },
  ],
  defaultVariants: {
    variant: "primary",
    size: "md",
  },
})
---

<a
  href={rawLink ? link : buildSlug(link)}
  class:list={[button({ variant: variant, size: size }), className]}
  {...attributes}>
  <slot />
</a>
