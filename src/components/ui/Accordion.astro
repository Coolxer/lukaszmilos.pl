---
export type FaqItem = {
  question: string
  answer: string[]
}

export interface Props {
  id: string
  items: FaqItem[]
}

const { id, items } = Astro.props
---

<div
  class="flex w-full max-w-prose flex-col gap-4"
  data-accordion="collapse"
  data-active-classes="bg-accent">
  {
    items?.map((item: FaqItem, index: number) => {
      const isLast = index === items.length - 1
      return (
        <>
          <div class="w-full">
            <button
              type="button"
              class:list={[
                "flex w-full items-center justify-between gap-4 rounded bg-accent-dark p-4 text-white shadow-sm transition-all duration-100 ease-in-out hover:bg-accent",
                !isLast && "border-b-0",
              ]}
              data-accordion-target={`#${id}-item-${index}`}
              aria-expanded="false"
              aria-controls={`${id}-item-${index}`}>
              <span>{item.question}</span>
              <svg
                data-accordion-icon
                class="h-4 w-4 shrink-0 rotate-180"
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 10 6">
                <path
                  stroke="currentColor"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M9 5 5 1 1 5"
                />
              </svg>
            </button>
          </div>
          <div id={`${id}-item-${index}`} class="hidden">
            <div class="p-4">
              {item.answer.map((paragraph) => (
                <p class="mb-2">{paragraph}</p>
              ))}
            </div>
          </div>
        </>
      )
    })
  }
</div>
