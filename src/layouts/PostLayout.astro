---
import type { MarkdownHeading } from "astro"
import type { CollectionEntry } from "astro:content"
import { Icon } from "astro-icon/components"

// import { readingTime } from "@utils/utils"

import data from "~/data/site.json"

import { type Meta, type Schema } from "@components/core/MySEO.astro"

import Layout from "@layouts/Layout.astro"

import Section from "@components/core/Section.astro"
import Row from "@components/core/Row.astro"
import MyImage from "@components/ui/MyImage.astro"
import Toc from "@components/blog/Toc.astro"
import PostNavigation from "@components/blog/PostNavigation.astro"
import MyBreadCrumbs from "@components/widgets/MyBreadCrumbs.astro"
import PostCard from "@components/blog/PostCard.astro"

import Categories from "@components/blog/Categories.astro"

export interface Props {
  post: CollectionEntry<"blog">
  headings: MarkdownHeading[]
  meta: Meta
  schema?: Schema
  relatedPosts: CollectionEntry<"blog">[]
  prevPost: CollectionEntry<"blog"> | null
  nextPost: CollectionEntry<"blog"> | null
}

const { post, headings, meta, schema, relatedPosts, prevPost, nextPost } =
  Astro.props
---

<Layout meta={meta} schema={schema}>
  <header
    class="align-center flex flex-col items-center gap-4 bg-accent-darkest px-6 py-8 text-white md:py-16">
    <div
      class="flex max-w-prose flex-col items-center justify-center gap-4 text-center">
      <!-- Breadcrumbs -->
      <MyBreadCrumbs />
      {post.data.title && <h1>{post.data.title}</h1>}
      {post.data.subheading && <p class="text-lg">{post.data.subheading}</p>}

      <!-- Reading time -->
      <!-- <div class="flex flex-col text-center">
      {readingTime(post.body)}
    </div> -->
    </div>
  </header>

  {
    post.data.image.src && (
      <Section noBottomPadding center>
        <MyImage
          src={post.data.image.src}
          alt={post.data.image.alt}
          class="md:w-1/2"
          loading="eager"
        />
      </Section>
    )
  }

  <Section>
    <!--Leading -->
    {
      post.data.leading && (
        <>
          <p class="text-lg">{post.data.leading}</p>
          <hr class="my-8 h-px border-0 bg-gray" />
        </>
      )
    }

    <!-- Table of Contents -->
    {
      headings && (
        <>
          <Toc headings={headings} />
          <hr class="my-8 h-px border-0 bg-gray" />
        </>
      )
    }

    <!-- Content -->
    <article class="prose lg:prose-xl">
      <slot />
    </article>
  </Section>

  <Section>
    <div
      class="flex w-full flex-col justify-between gap-4 md:flex-row md:gap-0">
      <!-- Post categories -->
      {post.data.categories && <Categories categories={post.data.categories} />}

      <!-- Author -->
      <div class="flex items-center gap-4">
        <!-- <img class="h-10 w-10 rounded-full" src="/docs/images/people/profile-picture-5.jpg" alt="" /> -->
        <Icon
          name="avatar"
          class="size-10 rounded-full bg-gray p-2 shadow-sm"
        />
        <div class="font-medium">
          <div>{post.data.author || data.site.blog.author}</div>
        </div>
      </div>
    </div>

    <hr class="my-8 h-px border-0 bg-gray" />

    <!-- Post navigation -->
    <PostNavigation class="mt-4" prevPost={prevPost} nextPost={nextPost} />
  </Section>

  <!-- Related posts -->
  {
    relatedPosts.length > 0 && (
      <Section noTopPadding>
        <p class="text-h4">PowiÄ…zane posty</p>
        <Row maxColumns={4}>
          {relatedPosts.length > 0 &&
            relatedPosts.map((post) => <PostCard post={post} />)}
        </Row>
      </Section>
    )
  }
</Layout>
